generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JobStatus {
  PENDING
  APPROVED
  REJECTED
  APPLIED
  INTERVIEW
  REJECTED_BY_COMPANY
}

model Job {
  id                 Int       @id @default(autoincrement())
  title              String
  company            String?
  description        String?
  url                String    @unique
  source             String
  status             JobStatus @default(PENDING)
  is_relevant        Boolean   @default(false)
  relevance_reasoning String?
  region             String?
  job_type           String?
  experience         String?
  salary             String?
  posted_date        DateTime? @db.Date
  created_at         DateTime  @default(now()) @db.Timestamp(6)
  updated_at         DateTime  @updatedAt @db.Timestamp(6)
  notes              String?
  applications       Application[]
  events             Event[]
}

model Application {
  id            Int      @id @default(autoincrement())
  job           Job      @relation(fields: [job_id], references: [id], onDelete: Cascade)
  job_id        Int
  status        JobStatus
  applied_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @updatedAt @db.Timestamp(6)
  cover_letter  String?
  resume_version String
}

model Event {
  id         Int      @id @default(autoincrement())
  job        Job      @relation(fields: [job_id], references: [id], onDelete: Cascade)
  job_id     Int
  type       String
  details    Json?
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model Profile {
  id        Int      @id @default(autoincrement())
  data      Json
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
}
